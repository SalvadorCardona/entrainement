/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/chat_boxes": {
    /**
     * Retrieves the collection of ChatBox resources.
     * @description Retrieves the collection of ChatBox resources.
     */
    get: operations["api_chat_boxes_get_collection"];
    /**
     * Creates a ChatBox resource.
     * @description Creates a ChatBox resource.
     */
    post: operations["api_chat_boxes_post"];
  };
  "/depots": {
    /**
     * Retrieves the collection of Depot resources.
     * @description Retrieves the collection of Depot resources.
     */
    get: operations["api_depots_get_collection"];
  };
  "/depots/{id}": {
    /**
     * Retrieves a Depot resource.
     * @description Retrieves a Depot resource.
     */
    get: operations["api_depots_id_get"];
  };
  "/reponses": {
    /**
     * Creates a Reponse resource.
     * @description Creates a Reponse resource.
     */
    post: operations["api_reponses_post"];
  };
  "/reponses/{id}": {
    /**
     * Retrieves a Reponse resource.
     * @description Retrieves a Reponse resource.
     */
    get: operations["api_reponses_id_get"];
  };
  "/validations": {
    /**
     * Creates a Validation resource.
     * @description Creates a Validation resource.
     */
    post: operations["api_validations_post"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "ChatBox.jsonld-chat-box.read": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      content?: string;
      /** @enum {string} */
      role?: "Administrator" | "Guest";
    };
    "ChatBox.jsonld-chat-box.write": {
      content?: string;
    };
    "Depot.jsonld-depot.read": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      titre?: string;
      description?: string;
      /** Format: date-time */
      dateCreation?: string;
      reponses?: components["schemas"]["Reponse.jsonld-depot.read"][];
    };
    "Reponse.jsonld": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      titre?: string;
      description?: string;
      /** Format: date-time */
      dateCreation?: string;
      /** Format: iri-reference */
      depot?: string | null;
      type?: number;
      /** Format: iri-reference */
      validation?: string | null;
    };
    "Reponse.jsonld-depot.read": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      id?: number;
      titre?: string;
      description?: string;
      /** Format: date-time */
      dateCreation?: string;
      type?: number;
      validation?: components["schemas"]["Validation.jsonld-depot.read"] | null;
    };
    "Reponse.jsonld-reponse.create": {
      titre?: string;
      description?: string;
      /** Format: iri-reference */
      depot?: string | null;
      type?: number;
    };
    "Validation.jsonld-depot.read": {
      id?: number;
      description?: string | null;
      /** Format: date-time */
      dateCreation?: string;
    };
    "Validation.jsonld-reponse_validation.create": {
      reponses?: string[];
      description?: string | null;
    };
    "Validation.jsonld-reponse_validation.read": {
      "@context"?: OneOf<[string, {
        "@vocab": string;
        /** @enum {string} */
        hydra: "http://www.w3.org/ns/hydra/core#";
        [key: string]: unknown;
      }]>;
      "@id"?: string;
      "@type"?: string;
      reponses?: string[];
      id?: number;
      description?: string | null;
    };
  };
  responses: {
  };
  parameters: {
  };
  requestBodies: {
  };
  headers: {
  };
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Retrieves the collection of ChatBox resources.
   * @description Retrieves the collection of ChatBox resources.
   */
  api_chat_boxes_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description ChatBox collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["ChatBox.jsonld-chat-box.read"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": {
            "hydra:member": components["schemas"]["ChatBox.jsonld-chat-box.read"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
        };
      };
    };
  };
  /**
   * Creates a ChatBox resource.
   * @description Creates a ChatBox resource.
   */
  api_chat_boxes_post: {
    /** @description The new ChatBox resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["ChatBox.jsonld-chat-box.write"];
        "application/json": components["schemas"]["ChatBox.jsonld-chat-box.write"];
      };
    };
    responses: {
      /** @description ChatBox resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["ChatBox.jsonld-chat-box.read"];
          "application/json": components["schemas"]["ChatBox.jsonld-chat-box.read"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves the collection of Depot resources.
   * @description Retrieves the collection of Depot resources.
   */
  api_depots_get_collection: {
    parameters: {
      query?: {
        /** @description The collection page number */
        page?: number;
      };
    };
    responses: {
      /** @description Depot collection */
      200: {
        content: {
          "application/ld+json": {
            "hydra:member": components["schemas"]["Depot.jsonld-depot.read"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
          "application/json": {
            "hydra:member": components["schemas"]["Depot.jsonld-depot.read"][];
            "hydra:totalItems"?: number;
            /**
             * @example {
             *   "@id": "string",
             *   "type": "string",
             *   "hydra:first": "string",
             *   "hydra:last": "string",
             *   "hydra:previous": "string",
             *   "hydra:next": "string"
             * }
             */
            "hydra:view"?: {
              /** Format: iri-reference */
              "@id"?: string;
              "@type"?: string;
              /** Format: iri-reference */
              "hydra:first"?: string;
              /** Format: iri-reference */
              "hydra:last"?: string;
              /** Format: iri-reference */
              "hydra:previous"?: string;
              /** Format: iri-reference */
              "hydra:next"?: string;
            };
            "hydra:search"?: {
              "@type"?: string;
              "hydra:template"?: string;
              "hydra:variableRepresentation"?: string;
              "hydra:mapping"?: ({
                  "@type"?: string;
                  variable?: string;
                  property?: string | null;
                  required?: boolean;
                })[];
            };
          };
        };
      };
    };
  };
  /**
   * Retrieves a Depot resource.
   * @description Retrieves a Depot resource.
   */
  api_depots_id_get: {
    parameters: {
      path: {
        /** @description Depot identifier */
        id: string;
      };
    };
    responses: {
      /** @description Depot resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Depot.jsonld-depot.read"];
          "application/json": components["schemas"]["Depot.jsonld-depot.read"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Creates a Reponse resource.
   * @description Creates a Reponse resource.
   */
  api_reponses_post: {
    /** @description The new Reponse resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Reponse.jsonld-reponse.create"];
        "application/json": components["schemas"]["Reponse.jsonld-reponse.create"];
      };
    };
    responses: {
      /** @description Reponse resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Reponse.jsonld"];
          "application/json": components["schemas"]["Reponse.jsonld"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Retrieves a Reponse resource.
   * @description Retrieves a Reponse resource.
   */
  api_reponses_id_get: {
    parameters: {
      path: {
        /** @description Reponse identifier */
        id: string;
      };
    };
    responses: {
      /** @description Reponse resource */
      200: {
        content: {
          "application/ld+json": components["schemas"]["Reponse.jsonld-depot.read"];
          "application/json": components["schemas"]["Reponse.jsonld-depot.read"];
        };
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
    };
  };
  /**
   * Creates a Validation resource.
   * @description Creates a Validation resource.
   */
  api_validations_post: {
    /** @description The new Validation resource */
    requestBody: {
      content: {
        "application/ld+json": components["schemas"]["Validation.jsonld-reponse_validation.create"];
        "application/json": components["schemas"]["Validation.jsonld-reponse_validation.create"];
      };
    };
    responses: {
      /** @description Validation resource created */
      201: {
        content: {
          "application/ld+json": components["schemas"]["Validation.jsonld-reponse_validation.read"];
          "application/json": components["schemas"]["Validation.jsonld-reponse_validation.read"];
        };
      };
      /** @description Invalid input */
      400: {
        content: never;
      };
      /** @description Unprocessable entity */
      422: {
        content: never;
      };
    };
  };
}
